// Code generated by protoc-gen-go. DO NOT EDIT.
// source: events/events.proto

package events

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FlowEventObserved struct {
	Header               *Header              `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	FlowEvent            *FlowEvent           `protobuf:"bytes,2,opt,name=flowEvent,proto3" json:"flowEvent,omitempty"`
	Height               uint64               `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
	ObservedAt           *timestamp.Timestamp `protobuf:"bytes,4,opt,name=observed_at,json=observedAt,proto3" json:"observed_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *FlowEventObserved) Reset()         { *m = FlowEventObserved{} }
func (m *FlowEventObserved) String() string { return proto.CompactTextString(m) }
func (*FlowEventObserved) ProtoMessage()    {}
func (*FlowEventObserved) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ec31f2d2a3db598, []int{0}
}

func (m *FlowEventObserved) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FlowEventObserved.Unmarshal(m, b)
}
func (m *FlowEventObserved) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FlowEventObserved.Marshal(b, m, deterministic)
}
func (m *FlowEventObserved) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FlowEventObserved.Merge(m, src)
}
func (m *FlowEventObserved) XXX_Size() int {
	return xxx_messageInfo_FlowEventObserved.Size(m)
}
func (m *FlowEventObserved) XXX_DiscardUnknown() {
	xxx_messageInfo_FlowEventObserved.DiscardUnknown(m)
}

var xxx_messageInfo_FlowEventObserved proto.InternalMessageInfo

func (m *FlowEventObserved) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *FlowEventObserved) GetFlowEvent() *FlowEvent {
	if m != nil {
		return m.FlowEvent
	}
	return nil
}

func (m *FlowEventObserved) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *FlowEventObserved) GetObservedAt() *timestamp.Timestamp {
	if m != nil {
		return m.ObservedAt
	}
	return nil
}

type FlowTransactionProcessed struct {
	Header               *Header              `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	TransactionId        string               `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Status               string               `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Error                bool                 `protobuf:"varint,4,opt,name=error,proto3" json:"error,omitempty"`
	ErrorReason          string               `protobuf:"bytes,5,opt,name=error_reason,json=errorReason,proto3" json:"error_reason,omitempty"`
	Events               []*FlowEvent         `protobuf:"bytes,6,rep,name=events,proto3" json:"events,omitempty"`
	ObservedAt           *timestamp.Timestamp `protobuf:"bytes,7,opt,name=observed_at,json=observedAt,proto3" json:"observed_at,omitempty"`
	RequestId            string               `protobuf:"bytes,8,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *FlowTransactionProcessed) Reset()         { *m = FlowTransactionProcessed{} }
func (m *FlowTransactionProcessed) String() string { return proto.CompactTextString(m) }
func (*FlowTransactionProcessed) ProtoMessage()    {}
func (*FlowTransactionProcessed) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ec31f2d2a3db598, []int{1}
}

func (m *FlowTransactionProcessed) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FlowTransactionProcessed.Unmarshal(m, b)
}
func (m *FlowTransactionProcessed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FlowTransactionProcessed.Marshal(b, m, deterministic)
}
func (m *FlowTransactionProcessed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FlowTransactionProcessed.Merge(m, src)
}
func (m *FlowTransactionProcessed) XXX_Size() int {
	return xxx_messageInfo_FlowTransactionProcessed.Size(m)
}
func (m *FlowTransactionProcessed) XXX_DiscardUnknown() {
	xxx_messageInfo_FlowTransactionProcessed.DiscardUnknown(m)
}

var xxx_messageInfo_FlowTransactionProcessed proto.InternalMessageInfo

func (m *FlowTransactionProcessed) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *FlowTransactionProcessed) GetTransactionId() string {
	if m != nil {
		return m.TransactionId
	}
	return ""
}

func (m *FlowTransactionProcessed) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *FlowTransactionProcessed) GetError() bool {
	if m != nil {
		return m.Error
	}
	return false
}

func (m *FlowTransactionProcessed) GetErrorReason() string {
	if m != nil {
		return m.ErrorReason
	}
	return ""
}

func (m *FlowTransactionProcessed) GetEvents() []*FlowEvent {
	if m != nil {
		return m.Events
	}
	return nil
}

func (m *FlowTransactionProcessed) GetObservedAt() *timestamp.Timestamp {
	if m != nil {
		return m.ObservedAt
	}
	return nil
}

func (m *FlowTransactionProcessed) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

type FlowEvent struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	TransactionId        string   `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	TransactionIndex     uint32   `protobuf:"varint,3,opt,name=transaction_index,json=transactionIndex,proto3" json:"transaction_index,omitempty"`
	EventIndex           uint32   `protobuf:"varint,4,opt,name=event_index,json=eventIndex,proto3" json:"event_index,omitempty"`
	Payload              []byte   `protobuf:"bytes,5,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FlowEvent) Reset()         { *m = FlowEvent{} }
func (m *FlowEvent) String() string { return proto.CompactTextString(m) }
func (*FlowEvent) ProtoMessage()    {}
func (*FlowEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ec31f2d2a3db598, []int{2}
}

func (m *FlowEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FlowEvent.Unmarshal(m, b)
}
func (m *FlowEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FlowEvent.Marshal(b, m, deterministic)
}
func (m *FlowEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FlowEvent.Merge(m, src)
}
func (m *FlowEvent) XXX_Size() int {
	return xxx_messageInfo_FlowEvent.Size(m)
}
func (m *FlowEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_FlowEvent.DiscardUnknown(m)
}

var xxx_messageInfo_FlowEvent proto.InternalMessageInfo

func (m *FlowEvent) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *FlowEvent) GetTransactionId() string {
	if m != nil {
		return m.TransactionId
	}
	return ""
}

func (m *FlowEvent) GetTransactionIndex() uint32 {
	if m != nil {
		return m.TransactionIndex
	}
	return 0
}

func (m *FlowEvent) GetEventIndex() uint32 {
	if m != nil {
		return m.EventIndex
	}
	return 0
}

func (m *FlowEvent) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type Header struct {
	EventName            string   `protobuf:"bytes,1,opt,name=event_name,json=eventName,proto3" json:"event_name,omitempty"`
	EventId              string   `protobuf:"bytes,2,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Header) Reset()         { *m = Header{} }
func (m *Header) String() string { return proto.CompactTextString(m) }
func (*Header) ProtoMessage()    {}
func (*Header) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ec31f2d2a3db598, []int{3}
}

func (m *Header) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Header.Unmarshal(m, b)
}
func (m *Header) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Header.Marshal(b, m, deterministic)
}
func (m *Header) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Header.Merge(m, src)
}
func (m *Header) XXX_Size() int {
	return xxx_messageInfo_Header.Size(m)
}
func (m *Header) XXX_DiscardUnknown() {
	xxx_messageInfo_Header.DiscardUnknown(m)
}

var xxx_messageInfo_Header proto.InternalMessageInfo

func (m *Header) GetEventName() string {
	if m != nil {
		return m.EventName
	}
	return ""
}

func (m *Header) GetEventId() string {
	if m != nil {
		return m.EventId
	}
	return ""
}

func init() {
	proto.RegisterType((*FlowEventObserved)(nil), "events.FlowEventObserved")
	proto.RegisterType((*FlowTransactionProcessed)(nil), "events.FlowTransactionProcessed")
	proto.RegisterType((*FlowEvent)(nil), "events.FlowEvent")
	proto.RegisterType((*Header)(nil), "events.Header")
}

func init() { proto.RegisterFile("events/events.proto", fileDescriptor_8ec31f2d2a3db598) }

var fileDescriptor_8ec31f2d2a3db598 = []byte{
	// 410 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x91, 0x51, 0x6f, 0xd3, 0x30,
	0x10, 0xc7, 0x95, 0x2d, 0x4b, 0x9b, 0xcb, 0x36, 0x51, 0x83, 0x90, 0x99, 0x84, 0x56, 0x22, 0x81,
	0x86, 0x90, 0x12, 0x09, 0x1e, 0x79, 0x02, 0x09, 0xc4, 0x5e, 0x00, 0x59, 0x7b, 0xaf, 0xdc, 0xf9,
	0xd6, 0x45, 0x6a, 0xe2, 0x60, 0xbb, 0x83, 0x7d, 0x29, 0xbe, 0x43, 0xbf, 0x19, 0xca, 0xd9, 0x6e,
	0x0b, 0xe2, 0x61, 0x7d, 0x8a, 0xef, 0x9f, 0x9f, 0xef, 0xee, 0xff, 0x37, 0x3c, 0xc6, 0x3b, 0xec,
	0x9c, 0xad, 0xfd, 0xa7, 0xea, 0x8d, 0x76, 0x9a, 0x65, 0xbe, 0x3a, 0x3b, 0x5f, 0x68, 0xbd, 0x58,
	0x62, 0x4d, 0xea, 0x7c, 0x75, 0x53, 0xbb, 0xa6, 0x45, 0xeb, 0x64, 0xdb, 0x7b, 0xb0, 0x5c, 0x27,
	0x30, 0xf9, 0xbc, 0xd4, 0x3f, 0x3f, 0x0d, 0xfc, 0xb7, 0xb9, 0x45, 0x73, 0x87, 0x8a, 0xbd, 0x82,
	0xec, 0x16, 0xa5, 0x42, 0xc3, 0x93, 0x69, 0x72, 0x51, 0xbc, 0x3d, 0xad, 0x42, 0xf7, 0x2f, 0xa4,
	0x8a, 0xf0, 0x97, 0xd5, 0x90, 0xdf, 0xc4, 0xcb, 0xfc, 0x80, 0xd0, 0x49, 0x44, 0x37, 0x5d, 0xc5,
	0x96, 0x61, 0x4f, 0x87, 0xc6, 0xcd, 0xe2, 0xd6, 0xf1, 0xc3, 0x69, 0x72, 0x91, 0x8a, 0x50, 0xb1,
	0xf7, 0x50, 0xe8, 0x30, 0x7c, 0x26, 0x1d, 0x4f, 0xa9, 0xd5, 0x59, 0xe5, 0xb7, 0xaf, 0xe2, 0xf6,
	0xd5, 0x55, 0xdc, 0x5e, 0x40, 0xc4, 0x3f, 0xb8, 0x72, 0x7d, 0x00, 0x7c, 0x98, 0x76, 0x65, 0x64,
	0x67, 0xe5, 0xb5, 0x6b, 0x74, 0xf7, 0xdd, 0xe8, 0x6b, 0xb4, 0x76, 0x0f, 0x2b, 0x2f, 0xe1, 0xd4,
	0x6d, 0xef, 0xcf, 0x1a, 0x45, 0x7e, 0x72, 0x71, 0xb2, 0xa3, 0x5e, 0xaa, 0xc1, 0x80, 0x75, 0xd2,
	0xad, 0x2c, 0x19, 0xc8, 0x45, 0xa8, 0xd8, 0x13, 0x38, 0x42, 0x63, 0xb4, 0xa1, 0xd5, 0xc7, 0xc2,
	0x17, 0xec, 0x05, 0x1c, 0xd3, 0x61, 0x66, 0x50, 0x5a, 0xdd, 0xf1, 0x23, 0xba, 0x53, 0x90, 0x26,
	0x48, 0x62, 0xaf, 0x21, 0xbc, 0x15, 0xcf, 0xa6, 0x87, 0xff, 0xcf, 0x2f, 0x00, 0xff, 0x86, 0x34,
	0xda, 0x27, 0x24, 0xf6, 0x1c, 0xc0, 0xe0, 0x8f, 0x15, 0x5a, 0x37, 0x78, 0x1b, 0xd3, 0x22, 0x79,
	0x50, 0x2e, 0x55, 0xf9, 0x3b, 0x81, 0x7c, 0x33, 0x91, 0x31, 0x48, 0xdd, 0x7d, 0x8f, 0x14, 0x59,
	0x2e, 0xe8, 0xfc, 0xd0, 0x80, 0xde, 0xc0, 0xe4, 0x2f, 0xac, 0x53, 0xf8, 0x8b, 0xb2, 0x3a, 0x11,
	0x8f, 0x76, 0xc9, 0x41, 0x67, 0xe7, 0x50, 0x90, 0xb7, 0x80, 0xa5, 0x84, 0x01, 0x49, 0x1e, 0xe0,
	0x30, 0xea, 0xe5, 0xfd, 0x52, 0x4b, 0x45, 0xd9, 0x1d, 0x8b, 0x58, 0x96, 0x1f, 0x21, 0xf3, 0x2f,
	0x38, 0x38, 0xf3, 0x4d, 0x3a, 0xd9, 0xc6, 0x95, 0x73, 0x52, 0xbe, 0xca, 0x16, 0xd9, 0x33, 0x18,
	0x87, 0x19, 0x71, 0xe3, 0x91, 0x1f, 0xa0, 0xe6, 0x19, 0x65, 0xf6, 0xee, 0x4f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x52, 0xed, 0x28, 0x8d, 0x43, 0x03, 0x00, 0x00,
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: services/services.proto

package services

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PollTransactionRequest struct {
	TxHash               string   `protobuf:"bytes,1,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	Topic                string   `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`
	RequestId            string   `protobuf:"bytes,3,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	ReferenceBlockId     []byte   `protobuf:"bytes,4,opt,name=reference_block_id,json=referenceBlockId,proto3" json:"reference_block_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PollTransactionRequest) Reset()         { *m = PollTransactionRequest{} }
func (m *PollTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*PollTransactionRequest) ProtoMessage()    {}
func (*PollTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_20616c573d3cd2a9, []int{0}
}

func (m *PollTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PollTransactionRequest.Unmarshal(m, b)
}
func (m *PollTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PollTransactionRequest.Marshal(b, m, deterministic)
}
func (m *PollTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PollTransactionRequest.Merge(m, src)
}
func (m *PollTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_PollTransactionRequest.Size(m)
}
func (m *PollTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PollTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PollTransactionRequest proto.InternalMessageInfo

func (m *PollTransactionRequest) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

func (m *PollTransactionRequest) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *PollTransactionRequest) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *PollTransactionRequest) GetReferenceBlockId() []byte {
	if m != nil {
		return m.ReferenceBlockId
	}
	return nil
}

type PollTransactionResponse struct {
	RequestId            string   `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PollTransactionResponse) Reset()         { *m = PollTransactionResponse{} }
func (m *PollTransactionResponse) String() string { return proto.CompactTextString(m) }
func (*PollTransactionResponse) ProtoMessage()    {}
func (*PollTransactionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_20616c573d3cd2a9, []int{1}
}

func (m *PollTransactionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PollTransactionResponse.Unmarshal(m, b)
}
func (m *PollTransactionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PollTransactionResponse.Marshal(b, m, deterministic)
}
func (m *PollTransactionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PollTransactionResponse.Merge(m, src)
}
func (m *PollTransactionResponse) XXX_Size() int {
	return xxx_messageInfo_PollTransactionResponse.Size(m)
}
func (m *PollTransactionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PollTransactionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PollTransactionResponse proto.InternalMessageInfo

func (m *PollTransactionResponse) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func init() {
	proto.RegisterType((*PollTransactionRequest)(nil), "services.PollTransactionRequest")
	proto.RegisterType((*PollTransactionResponse)(nil), "services.PollTransactionResponse")
}

func init() { proto.RegisterFile("services/services.proto", fileDescriptor_20616c573d3cd2a9) }

var fileDescriptor_20616c573d3cd2a9 = []byte{
	// 227 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2f, 0x4e, 0x2d, 0x2a,
	0xcb, 0x4c, 0x4e, 0x2d, 0xd6, 0x87, 0x31, 0xf4, 0x0a, 0x8a, 0xf2, 0x4b, 0xf2, 0x85, 0x38, 0x60,
	0x7c, 0xa5, 0x29, 0x8c, 0x5c, 0x62, 0x01, 0xf9, 0x39, 0x39, 0x21, 0x45, 0x89, 0x79, 0xc5, 0x89,
	0xc9, 0x25, 0x99, 0xf9, 0x79, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x42, 0xe2, 0x5c, 0xec,
	0x25, 0x15, 0xf1, 0x19, 0x89, 0xc5, 0x19, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x6c, 0x25,
	0x15, 0x1e, 0x89, 0xc5, 0x19, 0x42, 0x22, 0x5c, 0xac, 0x25, 0xf9, 0x05, 0x99, 0xc9, 0x12, 0x4c,
	0x60, 0x61, 0x08, 0x47, 0x48, 0x96, 0x8b, 0xab, 0x08, 0xa2, 0x33, 0x3e, 0x33, 0x45, 0x82, 0x19,
	0x2c, 0xc5, 0x09, 0x15, 0xf1, 0x4c, 0x11, 0xd2, 0xe1, 0x12, 0x2a, 0x4a, 0x4d, 0x4b, 0x2d, 0x4a,
	0xcd, 0x4b, 0x4e, 0x8d, 0x4f, 0xca, 0xc9, 0x4f, 0xce, 0x06, 0x29, 0x63, 0x51, 0x60, 0xd4, 0xe0,
	0x09, 0x12, 0x80, 0xcb, 0x38, 0x81, 0x24, 0x3c, 0x53, 0x94, 0x2c, 0xb8, 0xc4, 0x31, 0x5c, 0x55,
	0x5c, 0x90, 0x9f, 0x57, 0x9c, 0x8a, 0x66, 0x0f, 0x23, 0x9a, 0x3d, 0x46, 0x59, 0x5c, 0x02, 0xe1,
	0x89, 0x25, 0xa9, 0x45, 0x19, 0xf9, 0xc5, 0xa9, 0xc1, 0x10, 0x5f, 0x0a, 0x85, 0x71, 0xf1, 0xa3,
	0x99, 0x26, 0xa4, 0xa0, 0x07, 0x0f, 0x12, 0xec, 0xde, 0x97, 0x52, 0xc4, 0xa3, 0x02, 0xe2, 0x94,
	0x24, 0x36, 0x70, 0x68, 0x1a, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x23, 0xd7, 0x52, 0x3d, 0x68,
	0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WaterhoseServiceClient is the client API for WaterhoseService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WaterhoseServiceClient interface {
	PollTransaction(ctx context.Context, in *PollTransactionRequest, opts ...grpc.CallOption) (*PollTransactionResponse, error)
}

type waterhoseServiceClient struct {
	cc *grpc.ClientConn
}

func NewWaterhoseServiceClient(cc *grpc.ClientConn) WaterhoseServiceClient {
	return &waterhoseServiceClient{cc}
}

func (c *waterhoseServiceClient) PollTransaction(ctx context.Context, in *PollTransactionRequest, opts ...grpc.CallOption) (*PollTransactionResponse, error) {
	out := new(PollTransactionResponse)
	err := c.cc.Invoke(ctx, "/services.WaterhoseService/PollTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WaterhoseServiceServer is the server API for WaterhoseService service.
type WaterhoseServiceServer interface {
	PollTransaction(context.Context, *PollTransactionRequest) (*PollTransactionResponse, error)
}

// UnimplementedWaterhoseServiceServer can be embedded to have forward compatible implementations.
type UnimplementedWaterhoseServiceServer struct {
}

func (*UnimplementedWaterhoseServiceServer) PollTransaction(ctx context.Context, req *PollTransactionRequest) (*PollTransactionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PollTransaction not implemented")
}

func RegisterWaterhoseServiceServer(s *grpc.Server, srv WaterhoseServiceServer) {
	s.RegisterService(&_WaterhoseService_serviceDesc, srv)
}

func _WaterhoseService_PollTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PollTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WaterhoseServiceServer).PollTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.WaterhoseService/PollTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WaterhoseServiceServer).PollTransaction(ctx, req.(*PollTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _WaterhoseService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "services.WaterhoseService",
	HandlerType: (*WaterhoseServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PollTransaction",
			Handler:    _WaterhoseService_PollTransaction_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "services/services.proto",
}
